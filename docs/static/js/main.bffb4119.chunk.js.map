{"version":3,"sources":["components/AddCategory/index.jsx","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem/GifGridItem.jsx","components/GifGrid/GifGrid.jsx","components/GitExpertApp/index.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","getGifs","then","GifGridItem","console","log","className","src","alt","GifGrid","key","GitExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4MAGe,SAASA,EAAT,GAAyC,IAAlBC,EAAiB,EAAjBA,cAElC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBa,SAACP,GACtBF,EAAeE,EAAEQ,OAAOF,Y,8ECRjB,WAAyBG,GAAzB,uBAAAC,EAAA,6DACLC,EADK,iDAC2CC,UAAUH,GADrD,+DAGQI,MAAMF,GAHd,cAGLG,EAHK,gBAIUA,EAAKC,OAJf,uBAIJC,EAJI,EAIJA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAV9B,kBAcJM,GAdI,6C,sBCGA,SAASO,EAAcf,GAElC,MAA0Bb,mBAAS,CAC/BoB,KAAM,GACNS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,YDVA,SAAf,mCCYQC,CAAQpB,GACHqB,MAAM,SAAAX,GACCQ,EAAS,CACLX,KAAMG,EACNM,SAAS,SAI1B,CAAChB,IAEGiB,ECtBI,SAASK,EAAT,GAAyC,IAAlBV,EAAiB,EAAjBA,MAAOD,EAAU,EAAVA,GAAIT,EAAM,EAANA,IAI7C,OAFAqB,QAAQC,IAAI,CAAEZ,QAAOD,KAAIT,QAGrB,sBAAKuB,UAAU,yCAAf,UACI,qBAAKC,IAAKxB,EAAKyB,IAAKf,IACpB,4BAAIA,OCJD,SAASgB,EAAT,GAA+B,IAAZ5B,EAAW,EAAXA,SAE9B,EAAgCe,EAAaf,GAAhCa,EAAb,EAAQN,KAAaS,EAArB,EAAqBA,QAErB,OACI,qCACA,6BAAKhB,IAEHgB,GAAW,2CAEb,qBAAKS,UAAU,YAAf,SAEQZ,EAAOJ,KAAK,SAAAC,GAAG,OACX,wBAACY,EAAD,2BACSZ,GADT,IAEImB,IAAKnB,EAAIC,cCdlB,SAASmB,IAEpB,MAAoC3C,mBAAS,CAAC,WAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,qCACI,8CACA,cAACD,EAAD,CAAaC,cAAeA,IAC5B,uBAEA,6BAEQ6C,EAAWtB,KAAK,SAAAT,GAAQ,OACvB,cAAC4B,EAAD,CAEG5B,SAAUA,GADLA,WCb7BgC,IAASC,OAAO,cAACH,EAAD,IAAmBI,SAASC,eAAe,W","file":"static/js/main.bffb4119.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function AddCategory({ setCategories }) {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\")\r\n\r\n    const handleInputValue = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if( inputValue.trim().length > 2) {\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit} >\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputValue }\r\n            />\r\n\r\n        </form> \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export default async function getGifs ( category )  {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=hzA3izxU0emaGY85Rir5GvxV14cTKkwT`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import { useEffect, useState } from \"react\";\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nexport default function useFetchGifs (category) {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category)\r\n            .then( img => {\r\n                    setState({\r\n                        data: img,\r\n                        loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}","export default function GifGridItem ({title, id, url}) {\r\n    \r\n    console.log({ title, id, url });\r\n\r\n    return(\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}","import useFetchGifs from \"../../hooks/useFetchGifs\";\r\nimport GifGridItem from '../GifGridItem/GifGridItem';\r\n\r\nexport default function GifGrid ({category}) {\r\n\r\n    const { data:images, loading} = useFetchGifs(category);\r\n\r\n    return(\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n        { loading && <p>Loading...</p> }\r\n\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map( img => (\r\n                    <GifGridItem\r\n                        { ...img }\r\n                        key={img.id}\r\n                        />\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}","import { useState } from \"react\"\r\nimport AddCategory from \"../AddCategory\"\r\nimport GifGrid from \"../GifGrid/GifGrid\";\r\n\r\nexport default function GitExpertApp () {\r\n\r\n    const [categories, setCategories] = useState([\"Naruto\"]);\r\n\r\n    return(\r\n        <>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category =>\r\n                     <GifGrid\r\n                        key={category}\r\n                        category={category} />\r\n                        )                \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GitExpertApp from './components/GitExpertApp';\n\nReactDOM.render(<GitExpertApp /> , document.getElementById('root')\n);"],"sourceRoot":""}